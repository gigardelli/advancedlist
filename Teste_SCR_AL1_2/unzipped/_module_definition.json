{"scope":"PUBLIC","source":"\n\n  DS2_OPTIONS LOGICALEXPR = STANDARD;\n  DS2_OPTIONS SCOND = WARNING;\n  DS2_OPTIONS MISSING_NOTE;\n\n                                                                                 \n                     \n  package Teste_SCR_AL1_2  / inline;\n    dcl package GlobalContext context();\n    dcl package Container container;\n    dcl package SystemContext \"_sidSysCtxt\";\n    dcl package rediscli \"_sid_rdsp\";\n    dcl package logger logr_perf('App.tk.SID.Perf');\n    dcl double timer_start;\n    dcl double elapsed_time;\n    dcl double total_timer_start;\n    dcl double total_elapsed_time;\n    dcl package logger logr_error('App.tk.SID.Error');\n\n    dcl package \"Teste_SCR_AL_Rule_set_3_1_0\" \"Teste_SCR_AL_Rule_set_3_1_0_hdl\"();\n\n     method initGlobalContext();\n        dcl package SystemContext sc();\n        dcl package Container c1();\n        c1.sysCtxt = sc;\n        context.init();\n        context.add('System', c1);\n        _sidSysCtxt = sc;\n     end;\n     method initRedisDatagrid();\n         \"Teste_SCR_AL_Rule_set_3_1_0_hdl\".initRdsp();\n     end;\n\n     method init();\n         initGlobalContext();\n         initRedisDatagrid();\n\n     end;\n\n    method execute_internal(\n       in_out double \"client_id\"\n      ,in_out varchar \"Email\"\n      ,in_out varchar \"Nome\"\n      ,in_out varchar \"Telefone\"\n\n      ,in_out integer \"_filter_\"\n\n    );\n        dcl integer dg_filter_;\n\n       dcl integer _sidLogStatus;\n       dcl varchar(3000) _sidLogErrorMsg;\n\n        context.find('System', container);\n        \"_sidSysCtxt\" = container.sysCtxt;\n        if null(\"_sid_rdsp\") then do;\n            \"_sid_rdsp\" = \"_sidSysCtxt\".initRedisCli();\n        end;\n\n        total_timer_start = datetime();\n\n        timer_start = datetime();\n        \"Teste_SCR_AL_Rule_set_3_1_0_hdl\".execute(\"client_id\", \"Email\", \"Nome\", \"Telefone\", \"_sidSysCtxt\");\n\n        elapsed_time = datetime() - timer_start;\n        logr_perf.log( 'd', 'Package Name: Teste_SCR_AL1_2, Node Name: Rule_set_3, Node ID: 575e0de2-da29-4f8b-8671-6b2da10f6c48, NODE DURATION: ' .. elapsed_time);\n\n        \"end\":                                            \n\n        total_elapsed_time = datetime() - total_timer_start;\n        logr_perf.log( 'd', 'Package Name: Teste_SCR_AL1_2, TOTAL DURATION: ' .. total_elapsed_time);\n\n     end;\n\n    method execute(\n       double \"client_id_\"\n      ,in_out varchar \"Email\"\n      ,in_out varchar \"Nome\"\n      ,in_out varchar \"Telefone\"\n      ,in_out double \"client_id\"\n);\n\n      dcl integer _filter_;\n\n          \"client_id\" = \"client_id_\";\n\n          execute_internal(\n          \"client_id\"\n         ,\"Email\"\n         ,\"Nome\"\n         ,\"Telefone\"\n      ,\"_filter_\"\n      );\n\n    end;\n\n                   \n   endpackage;","properties":[{"name":"sourceURI","value":"/decisions/flows/22c64621-ab75-4f28-8597-0a276be7c3ab/revisions/8fd47a30-d637-4772-ae87-fe1e61bc741f"}],"submodules":[{"name":"SystemContext","description":"","source":"\n\npackage SystemContext /overwrite = yes;\n    dcl int rc;\n    dcl package rediscli _sid_rdsp;\n    method initRediscli() returns package rediscli;\n        if null(_sid_rdsp) then do;\n            _sid_rdsp = _new_ rediscli();\n                                rc = _sid_rdsp.connect('sid-lists');\n        end;\n        return _sid_rdsp;\n    end;\n endpackage;","attributes":{"keyValue":""},"language":"DS2"},{"name":"Container","description":"","source":" \n\npackage Container / overwrite = yes;\n    dcl package SystemContext sysCtxt;\n endpackage;","attributes":{"keyValue":""},"language":"DS2"},{"name":"GlobalContext","description":"","source":"\n\npackage GlobalContext / overwrite = yes;\n\n    dcl varchar(1024) ctxtKey;\n    dcl package Container ctxtValue;\n    dcl package hash context();\n\n    method init();\n        context.definekey('ctxtKey');\n        context.definedata('ctxtValue');\n        context.defineDone();\n    end;\n\n    method add(varchar(1024) key, package Container value);\n        ctxtKey = key;\n        ctxtValue = value;\n        context.ref();\n    end;\n\n    method getItemCount(in_out integer count);\n        count = context.num_items;\n    end;\n\n    method find(varchar(1024) key, in_out package Container value);\n        ctxtKey = key;\n        context.find();\n        value = ctxtValue;\n    end;\n\n endpackage;","attributes":{"keyValue":""},"language":"DS2"},{"name":"Teste_SCR_AL_Rule_set_3_1_0","description":"","source":"\n\nds2_options scond=WARNING;\n                                                                               \n\nDS2_OPTIONS LOGICALEXPR = STANDARD;\nDS2_OPTIONS SCOND = WARNING;\nDS2_OPTIONS MISSING_NOTE;\n\n                                                                                                                                                                                                                                                                              \n  package \"Teste_SCR_AL_Rule_set_3_1_0\"  / inline;\n\ndcl package rediscli _sid_rdsp;\n\n    dcl double _redis_datagrid_extended;\n\n      dcl package logger _logger('App.SASDCM');\n      dcl package logger logr_variableTrace('App.TableServices.DS2.Runtime.TraceVariables');\n\n                                                 \n            method setruleFiredBasePosition(integer newBasePosition); end;\n            method setDecisionNodeID(varchar newDecisonNodeID); end;\n            method enableRuleFiredRecording(); end;\n            method disableRuleFiredRecording(); end;\n            method initRuleFireHashes(); end;\n            method getRuleFiredFlagCount() returns integer;  return 0; end;\n            method recordRuleFired(\n              in_out char    ruleFiredFlags,\n              in_out integer rulesFiredForRecordCount,\n              char(36)       this_rule_id);\n            end;\n\n        method initRdsp();\n    end;\n\nmethod formatListNumericKey(double x) returns varchar;\n    if missing(x) then do;\n        return '';\n    end;\n    else do;\n        return putn(x, 'BEST24.-L');\n    end;\nend;\n\n    method execute( in_out double \"client_id\",in_out varchar \"Email\",in_out varchar \"Nome\",in_out varchar \"Telefone\", in_out package SystemContext \"globalSystemContext\");\n\n      dcl double rc;\n      dcl double rc_query;\n      dcl varchar(100000) _redis_key;\n      dcl varchar(10) _row_state;\n      dcl double _row_expiry;\n      dcl varchar(12) _row_expiry_string;\n\n\"_sid_rdsp\" = \"globalSystemContext\"._sid_rdsp;\n\n;\n         _redis_key = catt('SAS|0|0|LIST|Palin_SCR|1', '|', \"client_id\");\nrc = _sid_rdsp.HGET(_redis_key, '_ldMetadata_state', \"_row_state\");\nif (rc eq 0 ) then do;\nif (_row_state eq 'deployed') then do;\nrc = _sid_rdsp.HGET(_redis_key, '_ldMetadata_expiry', \"_row_expiry_string\");\nif (rc eq 0 ) then do;\n_row_expiry=inputn(\"_row_expiry_string\", '24.8') + 315619200;\nif missing(_row_expiry)=1 or datetime() le _row_expiry then do;\nrc = _sid_rdsp.HGET(_redis_key, 'Nome', \"Nome\");\nrc = _sid_rdsp.HGET(_redis_key, 'Email', \"Email\");\nrc = _sid_rdsp.HGET(_redis_key, 'Telefone', \"Telefone\");\nend;\nelse do;Nome = '';\nEmail = '';\nTelefone = '';\nend;\nend;\nend;\nelse do;Nome = '';\nEmail = '';\nTelefone = '';\nend;\nend;\n;\n\n      rule_end:                                    \n    end;\n\n                                                \n   endpackage;","attributes":{"keyValue":""},"language":"DS2"}]}